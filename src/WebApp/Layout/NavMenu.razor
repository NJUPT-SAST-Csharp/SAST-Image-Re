@inject I18n I18n
@inject AuthStateProvider Auth
@inject IStatusStorage<AuthState> AuthState

@code {

    [CascadingParameter(Name = "avatar")]
    public IStatusStorage<string> Avatar { get; set; } = null!;


    private string user => "/user/" + AuthState.Value.Id;
    private string avatarSrc = string.Empty;

    sealed class Item
    {
        public required string Title { get; set; }
        public required string Icon { get; set; }
        public required string Href { get; set; }
    }


    private Item[] items =
    [
    new() { Title= "Home", Icon= "mdi-view-dashboard", Href = "/" },
new() { Title= "Albums", Icon= "mdi-image-album", Href="/albums" }
    ];

    protected override void OnInitialized()
    {
        Avatar.Value = IUserAPI.GetAvatar(AuthState.Value.Id) + $"?t={DateTime.UtcNow.Ticks}";
        AuthState.OnChange += this.StateHasChanged;
        Avatar.OnChange += this.StateHasChanged;
    }
}

<MNavigationDrawer App ExpandOnHover Permanent Class="nav-drawer">

    <MListItem Href="@user" Class="px-2 mt-4">
        <MListItemAvatar Size="40">
            <MImage Src="@Avatar.Value"></MImage>
        </MListItemAvatar>
        @if (string.IsNullOrWhiteSpace(AuthState.Value.Username))
        {
            <MListItemTitle>@I18n.T("login") / @I18n.T("register")</MListItemTitle>
        }
        else
        {
            <MListItemTitle>@AuthState.Value.Username</MListItemTitle>
        }
    </MListItem>

    <MDivider />

    <MList Dense Nav>
        @foreach (var item in items)
        {
            <MListItem Href="@item.Href">
                <MListItemIcon>
                    <MIcon>@item.Icon</MIcon>
                </MListItemIcon>

                <MListItemContent>
                    <MListItemTitle>@item.Title</MListItemTitle>
                </MListItemContent>
            </MListItem>
        }
    </MList>
</MNavigationDrawer>

<style>
    .nav-drawer {
        display: block
    }

    @@media(max-width: 576px) {
        .nav-drawer {
            display: none;
        }
    }
</style>