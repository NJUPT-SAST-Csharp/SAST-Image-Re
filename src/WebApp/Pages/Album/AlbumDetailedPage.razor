@page "/albums/{id:long}"

@inject IStatusStorage<ExceptionRequest> ExceptionRequest

@inject IImageAPI ImageApi
@inject IAlbumAPI AlbumApi
@inject IJSRuntime JS

@code {
    [Parameter]
    public long Id { get; set; }

    [CascadingParameter(Name = "loading")]
    public IStatusStorage<bool> Loading { get; set; } = null!;

    private DetailedAlbum album;

    private ImageDto[] images = [];

    private string Style => $"view-transition-name: album-{Id};";

    protected async override Task OnInitializedAsync()
    {

        Loading.Value = true;

        var result1 = await AlbumApi.GetDetail(Id);
        var result2 = await ImageApi.GetImages(album: Id);

        Loading.Value = false;

        if (result1.IsSuccessStatusCode && result2.IsSuccessStatusCode)
        {
            album = result1.Content;
            images = result2.Content ?? [];
        }
        else
        {
            ExceptionRequest.Value = new()
                {
                    Message = "Failed to load album",
                    StatusCode = result1.StatusCode
                };
        }
    }
}

<PageTitle>SastImg - @album.Title</PageTitle>

<MRow Class="ma-md-1" AlignContent="AlignContentTypes.Center">

    <MCol Md="6" Class="d-flex">
        <MImage Contain Src="@IAlbumAPI.GetCover(Id)" Style="@Style" />
    </MCol>

    <MCol Md="6" Class="align-self-center vstack gap-1">
        <h3 class="text-center mx-5 my-3 my-md-3 ma-md-auto pt-md-3">
            @album.Title
        </h3>

        <div class="d-flex justify-content-center">
            <a href="" class="btn badge rounded-pill bg-info" type="button">
                @album.Category
            </a>
        </div>

        <h6 class="mt-3 text-center text-muted">@album.UpdatedAt</h6>
    </MCol>
</MRow>

<MDivider />

<ImageList Images="images" />