@page "/albums"

@inject IAlbumAPI Api
@inject IJSRuntime JS
@inject I18n I18n
@inject DataStorage<AlbumItemDto, long> Storage

@code {
    [CascadingParameter(Name = "loading")]
    private IStatusStorage<bool> Loading { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        IEnumerable<AlbumItemDto> albums = [];

        if(Storage.Count == 0)
        {
            Loading.Value = true;
            albums = await Api.GetAlbums();
            Loading.Value = false;
        }
        else
        {
            albums = await Api.GetAlbums();
        }


        foreach (var album in albums)
        {
            Storage.Add(album, album.Id);
        }
    }
}

<PageTitle>SastImg - Albums</PageTitle>



<div class="list">
    @foreach (var album in Storage.Items)
    {
        <AlbumItem @key="album.Key" Album="album.Value" />
    }
</div>

<style>
.list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    column-gap: 10px;
    row-gap: 1em;
}
</style>